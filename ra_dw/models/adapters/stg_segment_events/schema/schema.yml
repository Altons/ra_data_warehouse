version: 2

sources:
  - name: segment_events
    schema: company_website
    tables:
      - name: s_pages
        identifier: pages
      - name: s_tracks
        identifier: tracks

models:
  - name: stg_segment_events_segment_web_page_views
    columns:
      - name: page_view_id
        tests:
          - unique
          - not_null
  - name: stg_segment_events_web_user_stitching
    description: "This model performs user stitching on top of web event data. User stitching is the process of tying all events associated with a cookie to the same user_id, and solves a common problem in event analytics that users are only identified part way through their activity stream. This model returns a single user_id for every anonymous_id, and is later joined in to build a `blended_user_id` field, that acts as the primary user identifier for all sessions"
    columns:
      - name: anonymous_id
        tests:
          - unique
          - not_null

  - name: stg_segment_events_web_page_views_sessionized
    description: "The purpose of this model is to assign a `session_id` to page views. The business logic of how this is done is that any period of inactivity of 30 minutes or more resets the session, and any subsequent page views are assigned a new `session_id`."
    columns:
      - name: page_view_id
        tests:
          - unique
          - not_null

  - name: stg_segment_events_web_sessions_initial
    description: "This model performs the aggregation of page views into sessions. The `session_id` having already been calculated in `segment_web_page_views__sessionized`, this model simply calls a bunch of window functions to grab the first or last value of a given field and store it at the session level."
    columns:
      - name: session_id
        tests:
          - unique
          - not_null

  - name: stg_segment_events_web_sessions_stitched
    description: "This model joins initial session data with user stitching to get the field `blended_user_id`, the id for a user across all devices that they can be identified on. This logic is broken out from other models because, while incremental, it will frequently need to be rebuilt from scratch: this is because the user stitching process can change the `blended_user_id` values for historical sessions."
    columns:
      - name: session_id
        description: ''
        tests:
          - unique
          - not_null

  - name: stg_segment_events_web_sessions
    description: "The purpose of this model is to expose a single web session, derived from Segment web events. Sessions are the most common way that analysis of web visitor behavior is conducted, and although Segment doesn't natively output session data, this model uses standard logic to create sessions out of page view events. A session is meant to represent a single instance of web activity where a user is actively browsing a website. In this case, we are demarcating sessions by 30 minute windows of inactivity: if there is 30 minutes of inactivity between two page views, the second page view begins a new session. Additionally, page views across different devices will always be tied to different sessions. The logic implemented in this particular model is responsible for incrementally calculating a user's session number; the core sessionization logic is done in upstream models."
    columns:
      - name: session_id
        description: ''
        tests:
          - unique
          - not_null
