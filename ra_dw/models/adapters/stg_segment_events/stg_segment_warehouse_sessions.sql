{% if not var("enable_segment_events_source") %}
{{
    config(
        enabled=false
    )
}}
{% endif %}

with sessions as (
	SELECT
		id,
		received_at,
		context_library_name,
		context_page_path,
		 "path",
		first_value(referrer) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_referrer,
		context_ip,
		context_page_title,
		sent_at,
		 "timestamp",
		title,
		uuid_ts,
		context_page_referrer,
		context_library_version,
		context_page_url,
		context_user_agent,
		url,
		user_id,
		anonymous_id,
		original_timestamp,
		first_value(context_page_search) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_page_search,
		search,
    first_value(context_user_agent) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_user_agent,
		context_protocols_source_id,
		first_value(context_locale) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_locale,
		first_value(context_campaign_source) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_campaign_source,
		first_value(context_campaign_content) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_campaign_content,
		first_value(context_campaign_medium) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_campaign_medium,
		first_value(context_campaign_name) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_campaign_name,
		first_value(context_campaign_term) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as entrance_context_campaign_term,
		last_event,
		is_new_session,
		is_session_entrance_page,
		global_session_id,
		user_session_id,
		count(*) OVER (PARTITION BY user_id,
			user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS page_views_in_session,
		min(received_at) OVER (PARTITION BY user_id,
			user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS session_start_ts,
		max (received_at) OVER (PARTITION BY user_id,
		user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS session_end_ts,
		timestamp_diff (min(received_at) OVER (PARTITION BY user_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
		max (received_at) OVER (PARTITION BY user_id,user_session_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),SECOND) AS session_length_ts,
		first_value (context_page_path) OVER (PARTITION BY user_id, user_session_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS entrance_context_page_path
FROM (
SELECT
	id,
	received_at,
	context_library_name,
	context_page_path,
	 "path",
	referrer,
	context_ip,
	context_page_title,
	sent_at,
	 "timestamp",
	title,
	uuid_ts,
	context_page_referrer,
	context_library_version,
	context_page_url,
	context_user_agent,
	url,
	user_id,
	anonymous_id,
	original_timestamp,
	context_page_search,
	search,
	context_protocols_source_id,
	context_locale,
	context_campaign_source,
	context_campaign_content,
	context_campaign_medium,
	context_campaign_name,
	context_campaign_term,
	last_event,
	is_new_session,
	(is_new_session = 1) AS is_session_entrance_page,
sum(is_new_session) OVER (ORDER BY user_id,
	received_at ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS global_session_id,
sum(is_new_session) OVER (PARTITION BY user_id ORDER BY received_at ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS user_session_id
FROM (
SELECT
	id,
	received_at,
	context_library_name,
	context_page_path,
	"path",
	referrer,
	context_ip,
	context_page_title,
	sent_at,
	"timestamp",
	title,
	uuid_ts,
	context_page_referrer,
	context_library_version,
	context_page_url,
	context_user_agent,
	url,
	user_id,
	anonymous_id,
	original_timestamp,
	context_page_search,
	search,
	context_protocols_source_id,
	context_locale,
	context_campaign_source,
	context_campaign_content,
	context_campaign_medium,
	context_campaign_name,
	context_campaign_term,
	last_event,
	CASE WHEN (UNIX_SECONDS(received_at) - UNIX_SECONDS(last_event) >= (60 * 10))
		 OR(last_event IS NULL) THEN 1
	ELSE
		0
	END AS is_new_session
FROM (
SELECT
	id,
	received_at,
	context_library_name,
	context_page_path,
	 "path",
	referrer,
	context_ip,
	context_page_title,
	sent_at,
	 "timestamp",
	title,
	uuid_ts,
	context_page_referrer,
	context_library_version,
	context_page_url,
	context_user_agent,
	url,
	user_id,
	anonymous_id,
	original_timestamp,
	context_page_search,
	search,
	context_protocols_source_id,
	context_locale,
	context_campaign_source,
	context_campaign_content,
	context_campaign_medium,
	context_campaign_name,
	context_campaign_term,
	lead(received_at, 1) OVER (PARTITION BY user_id ORDER BY received_at DESC) AS last_event
FROM
	{{ ref('stg_segment_warehouse_pages') }}) last) final) pages),
renamed as (
SELECT
  	timestamp_trunc(session_start_ts,HOUR) AS session_start_hour,
  	session_start_ts,
  	timestamp_diff(lead(session_start_ts, 1) OVER (PARTITION BY user_id ORDER BY session_start_ts DESC),
  		session_start_ts,SECOND) AS secs_between_sessions,
  	user_id,
  	global_session_id,
  	user_session_id,
  	page_views_in_session,
  	CASE WHEN (page_views_in_session = 1) THEN 1 ELSE 0 END AS bounced_sessions,
  	session_length_ts,
  	entrance_context_page_path,
    entrance_referrer,
    entrance_context_page_search,
    entrance_context_campaign_source,
  	entrance_context_campaign_content,
  	entrance_context_campaign_medium,
  	entrance_context_campaign_name,
  	entrance_context_campaign_term,
    array_agg(struct(original_timestamp,context_page_path,context_page_referrer)) as pages_viewed
  FROM sessions
GROUP BY
	timestamp_trunc(session_start_ts,HOUR),
	session_start_ts,
	user_id,
	global_session_id,
	user_session_id,
	page_views_in_session,
	CASE WHEN (page_views_in_session = 1) THEN 1 ELSE 0	END,
	session_length_ts,
	entrance_context_page_path,
  entrance_referrer,
  entrance_context_page_search,
  entrance_context_campaign_source,
	entrance_context_campaign_content,
	entrance_context_campaign_medium,
	entrance_context_campaign_name,
	entrance_context_campaign_term
ORDER BY
	user_id,
	user_session_id)
select * from renamed
